image: golang:1-stretch

variables:
  WORK_DIR: /go/src/gitlab.com

before_script:
 - mkdir -p $WORK_DIR
 - cd $WORK_DIR
 - ln -sf $CI_PROJECT_DIR
 - cd $CI_PROJECT_NAME

pages:
  stage: deploy
  script:
    - go version
    - echo $CI_BUILD_REF
    - echo $CI_PROJECT_DIR
    - go get -u github.com/golang/dep/cmd/dep golang.org/x/tools/cmd/godoc
    - dep ensure -v -vendor-only
    - go test -short ./... -covermode=count -coverprofile=coverage.out
    - mkdir public
    - go fmt ./...
    - go tool cover -func=coverage.out
    - go tool cover -html=coverage.out -o public/coverage.html
    - curl -s https://codecov.io/bash > ci.sh
    - chmod 777 ./ci.sh
    - ./ci.sh -t $CODECOV_TOKEN
  artifacts:
    paths:
      - public

lint:
  stage: test
  allow_failure: true
  script:
    - go get -u github.com/mgechev/revive
    - revive -formatter stylish --exclude=./vendor/... ./...

codequality:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - docker run -i --rm --env CODECLIMATE_CODE="$PWD" -v "$PWD":/code -v /var/run/docker.sock:/var/run/docker.sock -v /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]
